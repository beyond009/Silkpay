[
	{
		"inputs": [
			{
				"internalType": "uint16",
				"name": "_arbitrationFeeRatio",
				"type": "uint16"
			},
			{
				"internalType": "uint256[4]",
				"name": "_timesPerPeriod",
				"type": "uint256[4]"
			}
		],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "_disputeID",
				"type": "uint256"
			},
			{
				"indexed": true,
				"internalType": "contract Arbitrable",
				"name": "_arbitrable",
				"type": "address"
			}
		],
		"name": "AppealDecision",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "_disputeID",
				"type": "uint256"
			},
			{
				"indexed": true,
				"internalType": "contract Arbitrable",
				"name": "_arbitrable",
				"type": "address"
			}
		],
		"name": "AppealPossible",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "_disputeID",
				"type": "uint256"
			},
			{
				"indexed": true,
				"internalType": "contract Arbitrable",
				"name": "_arbitrable",
				"type": "address"
			}
		],
		"name": "DisputeCreation",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "_disputeID",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "winningChoice",
				"type": "uint256"
			}
		],
		"name": "ExecuteRuling",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "_disputeID",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "enum SilkArbitrator.Period",
				"name": "_period",
				"type": "uint8"
			}
		],
		"name": "NewPeriod",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "DisputeId2VoteCounter",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "winningChoice",
				"type": "uint256"
			},
			{
				"internalType": "bool",
				"name": "tied",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "MIN_ARBITRATION_FEE_RATIO",
		"outputs": [
			{
				"internalType": "uint16",
				"name": "",
				"type": "uint16"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "MIN_VOTES",
		"outputs": [
			{
				"internalType": "uint16",
				"name": "",
				"type": "uint16"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "arbitrationFeeRatio",
		"outputs": [
			{
				"internalType": "uint16",
				"name": "",
				"type": "uint16"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_disputeID",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_voteID",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_choice",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_salt",
				"type": "uint256"
			}
		],
		"name": "castVote",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_disputeID",
				"type": "uint256"
			},
			{
				"internalType": "bytes32",
				"name": "_commit",
				"type": "bytes32"
			}
		],
		"name": "commit",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "voteID",
				"type": "uint256"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_numberOfChoices",
				"type": "uint256"
			}
		],
		"name": "createDispute",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "disputeID",
				"type": "uint256"
			}
		],
		"stateMutability": "payable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_disputeID",
				"type": "uint256"
			}
		],
		"name": "currentRuling",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "ruling",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "disputeCount",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_disputeID",
				"type": "uint256"
			}
		],
		"name": "disputeStatus",
		"outputs": [
			{
				"internalType": "enum Arbitrator.DisputeStatus",
				"name": "status",
				"type": "uint8"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "disputes",
		"outputs": [
			{
				"internalType": "contract Arbitrable",
				"name": "arbitrated",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "numberOfChoices",
				"type": "uint256"
			},
			{
				"internalType": "enum SilkArbitrator.Period",
				"name": "period",
				"type": "uint8"
			},
			{
				"internalType": "uint256",
				"name": "lastPeriodChange",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "fees",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "ruling",
				"type": "uint256"
			},
			{
				"internalType": "enum Arbitrator.DisputeStatus",
				"name": "status",
				"type": "uint8"
			},
			{
				"internalType": "bool",
				"name": "ruled",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_disputeID",
				"type": "uint256"
			}
		],
		"name": "executeRuling",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			}
		],
		"name": "getArbtrationFee",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_disputeID",
				"type": "uint256"
			}
		],
		"name": "getVotedCount",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_dispute_id",
				"type": "uint256"
			}
		],
		"name": "getVotes",
		"outputs": [
			{
				"components": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "commit",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "choice",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "voted",
						"type": "bool"
					}
				],
				"internalType": "struct SilkArbitrator.Vote[]",
				"name": "",
				"type": "tuple[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "owner",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_disputeID",
				"type": "uint256"
			}
		],
		"name": "passPeriod",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint16",
				"name": "_arbitrationFeeRatio",
				"type": "uint16"
			}
		],
		"name": "setFeeRatio",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "timesPerPeriod",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
]